# Generated by Django 5.0.11 on 2025-09-02 05:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('AssetID', models.AutoField(primary_key=True, serialize=False)),
                ('AssetBondType', models.CharField(blank=True, choices=[('Bonded', 'Bonded'), ('Non Bonded', 'Non Bonded')], max_length=50, null=True)),
                ('AssetName', models.CharField(max_length=255)),
                ('Category', models.CharField(blank=True, max_length=255, null=True)),
                ('AssetNumber', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('BondNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('PurchaseOrder', models.CharField(blank=True, max_length=100, null=True)),
                ('PurchaseRequisition', models.CharField(blank=True, max_length=100, null=True)),
                ('Capex', models.CharField(blank=True, max_length=100, null=True)),
                ('SerialNumber', models.CharField(blank=True, max_length=50, null=True)),
                ('PartNumber', models.CharField(blank=True, max_length=50, null=True)),
                ('AssetType', models.CharField(choices=[('Hardware', 'Hardware'), ('Software', 'Software')], default='Hardware', max_length=50)),
                ('AssetStatus', models.CharField(choices=[('Working', 'Working'), ('Under Maintenance', 'Under Maintenance'), ('Not Working', 'Not Working')], default='Working', max_length=50)),
                ('AssetModel', models.CharField(blank=True, max_length=255, null=True)),
                ('AssetAvailability', models.CharField(choices=[('Available', 'Available'), ('In Use', 'In Use')], default='Available', max_length=20)),
                ('Warehouse', models.CharField(blank=True, max_length=255, null=True)),
                ('Location', models.CharField(blank=True, max_length=255, null=True)),
                ('AssetProvider', models.CharField(choices=[('CSI-Borrowed', 'CSI-Borrowed'), ('CSI-Purchased', 'CSI-Purchased'), ('BGSW', 'BGSW')], default='BGSW', max_length=50)),
                ('AssetClassification', models.CharField(choices=[('Consumables', 'Consumables'), ('Non Consumables', 'Non Consumables')], default='Consumables', max_length=50)),
                ('PurchaseDate', models.DateField(blank=True, null=True)),
                ('Cost', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('Warranty', models.IntegerField(blank=True, null=True)),
                ('BondExpiryDate', models.DateField(blank=True, null=True)),
                ('Specification', models.TextField(blank=True, null=True)),
                ('RequiresCalibration', models.BooleanField(default=False)),
                ('SoftwareVersion', models.CharField(blank=True, max_length=50, null=True)),
                ('RenewDate', models.DateField(blank=True, null=True)),
                ('idle_days', models.IntegerField(default=0)),
                ('max_idle_days', models.IntegerField(default=0)),
                ('CreationDate', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Asset',
            },
        ),
        migrations.CreateModel(
            name='AssetNumberTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LastGeneratedNumber', models.IntegerField(default=0)),
                ('LastGeneratedDate', models.DateTimeField(auto_now_add=True)),
                ('Prefix', models.CharField(default='INT-', max_length=10)),
                ('IsUsed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'AssetNumberTracking',
            },
        ),
        migrations.CreateModel(
            name='Calibration',
            fields=[
                ('CalibrationId', models.AutoField(primary_key=True, serialize=False)),
                ('LastCalibrationDate', models.DateField()),
                ('CalibrationAuthority', models.CharField(blank=True, max_length=255, null=True)),
                ('certificate', models.CharField(max_length=255)),
                ('CalibrationNotes', models.TextField(blank=True, null=True)),
                ('CalibrationInterval', models.IntegerField()),
            ],
            options={
                'db_table': 'Calibration',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('CategoryID', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('DocumentId', models.AutoField(primary_key=True, serialize=False)),
                ('DocumentPath', models.CharField(max_length=255)),
                ('UploadDate', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Document',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('ImageId', models.AutoField(primary_key=True, serialize=False)),
                ('ImagePath', models.CharField(max_length=255)),
                ('UploadDate', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Image',
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('MaintenanceId', models.AutoField(primary_key=True, serialize=False)),
                ('LastMaintenanceDate', models.DateField()),
                ('MaintenanceInterval', models.IntegerField()),
                ('MaintenanceNotes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Maintenance',
            },
        ),
        migrations.CreateModel(
            name='ReportConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('json_data', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('UserId', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255)),
                ('password_hash', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{10,15}$', message='Enter a valid phone number.')])),
                ('role', models.CharField(default='USER', max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('VendorId', models.AutoField(primary_key=True, serialize=False)),
                ('VendorName', models.CharField(max_length=255)),
                ('VendorContact', models.CharField(max_length=255)),
                ('VendorNotes', models.TextField(blank=True, null=True)),
                ('BgswVendorId', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Vendor',
            },
        ),
        migrations.CreateModel(
            name='AssetRequest',
            fields=[
                ('RequestId', models.AutoField(primary_key=True, serialize=False)),
                ('Status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Completed', 'Completed'), ('ReturnRequested', 'Return Requested'), ('ReturnAccepted', 'Return Accepted'), ('ReturnReceived', 'Return Received'), ('Surrendered', 'Surrendered')], default='Pending', max_length=50)),
                ('StartDate', models.DateField()),
                ('EndDate', models.DateField()),
                ('Purpose', models.TextField(blank=True)),
                ('RequestedAt', models.DateTimeField(auto_now_add=True)),
                ('SurrenderDate', models.DateField(blank=True, null=True)),
                ('AssetID', models.ForeignKey(db_column='AssetID', on_delete=django.db.models.deletion.CASCADE, to='app.asset')),
                ('UserId', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
            options={
                'db_table': 'AssetRequest',
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='CalibrationID',
            field=models.ForeignKey(blank=True, db_column='CalibrationID', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.calibration'),
        ),
        migrations.AddField(
            model_name='asset',
            name='cid',
            field=models.ForeignKey(blank=True, db_column='cid', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assets', to='app.category'),
        ),
        migrations.AddField(
            model_name='asset',
            name='DocumentID',
            field=models.ForeignKey(blank=True, db_column='DocumentID', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.document'),
        ),
        migrations.AddField(
            model_name='asset',
            name='ImageID',
            field=models.ForeignKey(blank=True, db_column='ImageID', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.image'),
        ),
        migrations.AddField(
            model_name='asset',
            name='MaintenanceID',
            field=models.ForeignKey(blank=True, db_column='MaintenanceID', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.maintenance'),
        ),
        migrations.CreateModel(
            name='RequestStage',
            fields=[
                ('StageId', models.AutoField(primary_key=True, serialize=False)),
                ('StageName', models.CharField(choices=[('Request', 'Request'), ('Approve', 'Approve'), ('Reject', 'Reject'), ('Issue', 'Issue'), ('Acknowledge', 'Acknowledge'), ('ReturnRequest', 'Return Request'), ('ReturnAccept', 'Return Accept'), ('ReturnReceive', 'Return Receive'), ('ReturnClose', 'Return Close')], max_length=50)),
                ('StageDate', models.DateTimeField(auto_now_add=True)),
                ('Comment', models.TextField(blank=True)),
                ('RequestId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='app.assetrequest')),
                ('StageBy', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
            options={
                'db_table': 'RequestStage',
                'ordering': ['StageDate'],
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='VendorID',
            field=models.ForeignKey(blank=True, db_column='VendorID', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.vendor'),
        ),
    ]
